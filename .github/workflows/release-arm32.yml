name: ipctool-arm32

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  workflow_dispatch:


jobs:
  build-musl-static:
    runs-on: ubuntu-latest

    env:
      ARCHIVE: arm-gcc13-musl-3_0
      PLATFORM: arm-openipc-linux-musleabi_sdk-buildroot
      TOOLCHAIN: arm-openipc-linux-musleabi
      VERSION: 4.2.3

    steps:
      - uses: pozetroninc/github-action-get-latest-release@master
        id: ct-ng-release
        with:
          owner: widgetii
          repo: ct-ng-builds

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build sources
        id: build
        run: |
          HEAD_TAG=$(git tag --points-at HEAD)
          GIT_HASH=$(git rev-parse --short $GITHUB_SHA)
          BRANCH_NAME=$(echo $GITHUB_REF | cut -d'/' -f 3)
          if [ -z "$HEAD_TAG" ]; then
            TAG_NAME="latest"
            RELEASE_NAME="Development Build"
            PRERELEASE=true
          else
            TAG_NAME=${{ github.ref }}
            RELEASE_NAME="Release ${{ github.ref }}"
            PRERELEASE=false
          fi
          echo "GIT_HASH=$GIT_HASH" >> $GITHUB_ENV
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV
          echo "PRERELEASE=$PRERELEASE" >> $GITHUB_ENV
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

          wget -q https://github.com/upx/upx/releases/download/v$VERSION/upx-$VERSION-amd64_linux.tar.xz
          tar -xf upx-$VERSION-amd64_linux.tar.xz --strip-components 1

          REL="${{ steps.ct-ng-release.outputs.release }}"
          echo "Got release $REL"
          wget -qO- https://github.com/OpenIPC/firmware/releases/download/latest/$ARCHIVE.tgz | \
            tar xfz - -C /opt
          export PATH=/opt/$PLATFORM/bin:$PATH
          sudo apt-get install -y cmake
          cmake -H. -Bbuild -DCMAKE_C_COMPILER=${TOOLCHAIN}-gcc -DCMAKE_BUILD_TYPE=Release
          cmake --build build
          ./upx build/ipcinfo
          ./upx build/ipctool
          cp build/ipctool ipctool-$GIT_HASH
        continue-on-error: true

      - name: Create release
        uses: actions/create-release@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: ${{ env.RELEASE_NAME }}
          draft: false
          prerelease: ${{ env.PRERELEASE }}

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "build/ipctool"
          asset_name: "ipctool"
          tag: ${{ env.TAG_NAME }}
          overwrite: true

      - name: Upload ipcinfo to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: "build/ipcinfo"
          asset_name: "ipcinfo"
          tag: ${{ env.TAG_NAME }}
          overwrite: true

#     - name: Trigger CI tests
#       if: env.HEAD_TAG == ''
#       uses: peter-evans/repository-dispatch@v1
#       with:
#         token: ${{ secrets.REPO_ACCESS_TOKEN }}
#         repository: OpenIPC/ipctool
#         event-type: ci-tests
#         client-payload: '{"sha": "${{ env.GIT_HASH }}"}'
